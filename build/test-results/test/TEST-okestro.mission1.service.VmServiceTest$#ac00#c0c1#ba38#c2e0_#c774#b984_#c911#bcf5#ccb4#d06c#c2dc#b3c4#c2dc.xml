<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="okestro.mission1.service.VmServiceTest$가상머신_이름_중복체크시도시" tests="2" skipped="0" failures="0" errors="0" timestamp="2025-05-23T07:40:58.749Z" hostname="isangmin-ui-MacBookPro.local" time="0.015">
  <properties/>
  <testcase name="기존_가상머신_이름과_중복된다면_true를_반환한다()" classname="okestro.mission1.service.VmServiceTest$가상머신_이름_중복체크시도시" time="0.008"/>
  <testcase name="기존_가상머신_이름과_중복된지_않으면_false를_반환한다()" classname="okestro.mission1.service.VmServiceTest$가상머신_이름_중복체크시도시" time="0.006"/>
  <system-out><![CDATA[2025-05-23T16:40:58.749+09:00  INFO 38395 --- [mission1] [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [okestro.mission1.service.VmServiceTest$가상머신_이름_중복체크시도시]: 가상머신_이름_중복체크시도시 does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-05-23T16:40:58.749+09:00  INFO 38395 --- [mission1] [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration okestro.mission1.Mission1Application for test class okestro.mission1.service.VmServiceTest$가상머신_이름_중복체크시도시
Hibernate: select t1_0.tag_id,t1_0.create_at,t1_0.name,t1_0.update_at from tag t1_0
Hibernate: select m1_0.member_id,m1_0.create_at,m1_0.email,m1_0.password,m1_0.update_at from member m1_0
Hibernate: select n1_0.network_id,n1_0.create_at,n1_0.name,n1_0.open_ip,n1_0.open_port,n1_0.update_at,n1_0.vm_id from network n1_0
Hibernate: select v1_0.vm_id,v1_0.create_at,v1_0.deleted,v1_0.description,v1_0.member_id,v1_0.memory,v1_0.name,v1_0.private_ip,v1_0.storage,v1_0.update_at,v1_0.vcpu,v1_0.vm_status from vm v1_0 where (v1_0.deleted = false)
Hibernate: insert into member (create_at,email,password,update_at,member_id) values (?,?,?,?,?)
Hibernate: insert into network (create_at,name,open_ip,open_port,update_at,vm_id,network_id) values (?,?,?,?,?,?,default)
Hibernate: insert into tag (create_at,name,update_at,tag_id) values (?,?,?,default)
Hibernate: insert into tag (create_at,name,update_at,tag_id) values (?,?,?,default)
Hibernate: insert into tag (create_at,name,update_at,tag_id) values (?,?,?,default)
Hibernate: insert into tag (create_at,name,update_at,tag_id) values (?,?,?,default)
Hibernate: insert into tag (create_at,name,update_at,tag_id) values (?,?,?,default)
Hibernate: insert into vm (create_at,deleted,description,member_id,memory,name,private_ip,storage,update_at,vcpu,vm_status,vm_id) values (?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into vm (create_at,deleted,description,member_id,memory,name,private_ip,storage,update_at,vcpu,vm_status,vm_id) values (?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into vm (create_at,deleted,description,member_id,memory,name,private_ip,storage,update_at,vcpu,vm_status,vm_id) values (?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select t1_0.tag_id,t1_0.create_at,t1_0.name,t1_0.update_at from tag t1_0
Hibernate: select v1_0.vm_id from vm v1_0 where (v1_0.deleted = false) and v1_0.name=? fetch first ? rows only
Hibernate: select t1_0.tag_id,t1_0.create_at,t1_0.name,t1_0.update_at from tag t1_0
Hibernate: select m1_0.member_id,m1_0.create_at,m1_0.email,m1_0.password,m1_0.update_at from member m1_0
Hibernate: select n1_0.network_id,n1_0.create_at,n1_0.name,n1_0.open_ip,n1_0.open_port,n1_0.update_at,n1_0.vm_id from network n1_0
Hibernate: select v1_0.vm_id,v1_0.create_at,v1_0.deleted,v1_0.description,v1_0.member_id,v1_0.memory,v1_0.name,v1_0.private_ip,v1_0.storage,v1_0.update_at,v1_0.vcpu,v1_0.vm_status from vm v1_0 where (v1_0.deleted = false)
Hibernate: insert into member (create_at,email,password,update_at,member_id) values (?,?,?,?,?)
Hibernate: insert into network (create_at,name,open_ip,open_port,update_at,vm_id,network_id) values (?,?,?,?,?,?,default)
Hibernate: insert into tag (create_at,name,update_at,tag_id) values (?,?,?,default)
Hibernate: insert into tag (create_at,name,update_at,tag_id) values (?,?,?,default)
Hibernate: insert into tag (create_at,name,update_at,tag_id) values (?,?,?,default)
Hibernate: insert into tag (create_at,name,update_at,tag_id) values (?,?,?,default)
Hibernate: insert into tag (create_at,name,update_at,tag_id) values (?,?,?,default)
Hibernate: insert into vm (create_at,deleted,description,member_id,memory,name,private_ip,storage,update_at,vcpu,vm_status,vm_id) values (?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into vm (create_at,deleted,description,member_id,memory,name,private_ip,storage,update_at,vcpu,vm_status,vm_id) values (?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into vm (create_at,deleted,description,member_id,memory,name,private_ip,storage,update_at,vcpu,vm_status,vm_id) values (?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select t1_0.tag_id,t1_0.create_at,t1_0.name,t1_0.update_at from tag t1_0
Hibernate: select v1_0.vm_id from vm v1_0 where (v1_0.deleted = false) and v1_0.name=? fetch first ? rows only
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
