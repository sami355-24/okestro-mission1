<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="okestro.mission1.service.VmServiceTest$가상머신_수정_시도시" tests="2" skipped="0" failures="0" errors="0" timestamp="2025-05-26T00:35:49.983Z" hostname="isangmin-ui-MacBookPro.local" time="0.032">
  <properties/>
  <testcase name="입력_값이_올바를경우_수정에_성공한다()" classname="okestro.mission1.service.VmServiceTest$가상머신_수정_시도시" time="0.02"/>
  <testcase name="존재하지_않는_가상머신_id로_수정시도할_경우_예외가_발생한다()" classname="okestro.mission1.service.VmServiceTest$가상머신_수정_시도시" time="0.012"/>
  <system-out><![CDATA[2025-05-26T09:35:49.981+09:00  INFO 36575 --- [mission1] [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [okestro.mission1.service.VmServiceTest$가상머신_수정_시도시]: 가상머신_수정_시도시 does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-05-26T09:35:49.982+09:00  INFO 36575 --- [mission1] [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration okestro.mission1.Mission1Application for test class okestro.mission1.service.VmServiceTest$가상머신_수정_시도시
Hibernate: select t1_0.tag_id,t1_0.create_at,t1_0.name,t1_0.update_at from tag t1_0
Hibernate: select m1_0.member_id,m1_0.create_at,m1_0.email,m1_0.password,m1_0.update_at from member m1_0
Hibernate: select n1_0.network_id,n1_0.create_at,n1_0.name,n1_0.open_ip,n1_0.open_port,n1_0.update_at,n1_0.vm_id from network n1_0
Hibernate: select v1_0.vm_id,v1_0.create_at,v1_0.deleted,v1_0.description,v1_0.member_id,v1_0.memory,v1_0.name,v1_0.private_ip,v1_0.storage,v1_0.update_at,v1_0.vcpu,v1_0.vm_status from vm v1_0 where (v1_0.deleted = false)
Hibernate: insert into member (create_at,email,password,update_at,member_id) values (?,?,?,?,?)
Hibernate: insert into network (create_at,name,open_ip,open_port,update_at,vm_id,network_id) values (?,?,?,?,?,?,default)
Hibernate: insert into tag (create_at,name,update_at,tag_id) values (?,?,?,default)
Hibernate: insert into tag (create_at,name,update_at,tag_id) values (?,?,?,default)
Hibernate: insert into tag (create_at,name,update_at,tag_id) values (?,?,?,default)
Hibernate: insert into tag (create_at,name,update_at,tag_id) values (?,?,?,default)
Hibernate: insert into tag (create_at,name,update_at,tag_id) values (?,?,?,default)
Hibernate: insert into vm (create_at,deleted,description,member_id,memory,name,private_ip,storage,update_at,vcpu,vm_status,vm_id) values (?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into vm (create_at,deleted,description,member_id,memory,name,private_ip,storage,update_at,vcpu,vm_status,vm_id) values (?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into vm (create_at,deleted,description,member_id,memory,name,private_ip,storage,update_at,vcpu,vm_status,vm_id) values (?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select t1_0.tag_id,t1_0.create_at,t1_0.name,t1_0.update_at from tag t1_0
Hibernate: select v1_0.vm_id from vm v1_0 where (v1_0.deleted = false) and v1_0.name=? fetch first ? rows only
Hibernate: select v1_0.vm_id,v1_0.create_at,v1_0.deleted,v1_0.description,v1_0.member_id,v1_0.memory,v1_0.name,v1_0.private_ip,v1_0.storage,v1_0.update_at,v1_0.vcpu,v1_0.vm_status from vm v1_0 where v1_0.vm_id=? and (v1_0.deleted = false)
Hibernate: select n1_0.vm_id,n1_0.network_id,n1_0.create_at,n1_0.name,n1_0.open_ip,n1_0.open_port,n1_0.update_at from network n1_0 where n1_0.vm_id=?
Hibernate: select vt1_0.vm_id,vt1_0.vm_tag_id,vt1_0.create_at,vt1_0.tag_id,t1_0.tag_id,t1_0.create_at,t1_0.name,t1_0.update_at,vt1_0.update_at from vm_tag vt1_0 left join tag t1_0 on t1_0.tag_id=vt1_0.tag_id where vt1_0.vm_id=?
Hibernate: insert into vm_tag (create_at,tag_id,update_at,vm_id,vm_tag_id) values (?,?,?,?,default)
Hibernate: update vm set deleted=?,description=?,member_id=?,memory=?,name=?,private_ip=?,storage=?,update_at=?,vcpu=?,vm_status=? where vm_id=?
Hibernate: select t1_0.tag_id,t1_0.create_at,t1_0.name,t1_0.update_at from tag t1_0
Hibernate: select m1_0.member_id,m1_0.create_at,m1_0.email,m1_0.password,m1_0.update_at from member m1_0
Hibernate: select n1_0.network_id,n1_0.create_at,n1_0.name,n1_0.open_ip,n1_0.open_port,n1_0.update_at,n1_0.vm_id from network n1_0
Hibernate: select v1_0.vm_id,v1_0.create_at,v1_0.deleted,v1_0.description,v1_0.member_id,v1_0.memory,v1_0.name,v1_0.private_ip,v1_0.storage,v1_0.update_at,v1_0.vcpu,v1_0.vm_status from vm v1_0 where (v1_0.deleted = false)
Hibernate: insert into member (create_at,email,password,update_at,member_id) values (?,?,?,?,?)
Hibernate: insert into network (create_at,name,open_ip,open_port,update_at,vm_id,network_id) values (?,?,?,?,?,?,default)
Hibernate: insert into tag (create_at,name,update_at,tag_id) values (?,?,?,default)
Hibernate: insert into tag (create_at,name,update_at,tag_id) values (?,?,?,default)
Hibernate: insert into tag (create_at,name,update_at,tag_id) values (?,?,?,default)
Hibernate: insert into tag (create_at,name,update_at,tag_id) values (?,?,?,default)
Hibernate: insert into tag (create_at,name,update_at,tag_id) values (?,?,?,default)
Hibernate: insert into vm (create_at,deleted,description,member_id,memory,name,private_ip,storage,update_at,vcpu,vm_status,vm_id) values (?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into vm (create_at,deleted,description,member_id,memory,name,private_ip,storage,update_at,vcpu,vm_status,vm_id) values (?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into vm (create_at,deleted,description,member_id,memory,name,private_ip,storage,update_at,vcpu,vm_status,vm_id) values (?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select t1_0.tag_id,t1_0.create_at,t1_0.name,t1_0.update_at from tag t1_0
Hibernate: select v1_0.vm_id from vm v1_0 where (v1_0.deleted = false) and v1_0.name=? fetch first ? rows only
Hibernate: select v1_0.vm_id,v1_0.create_at,v1_0.deleted,v1_0.description,v1_0.member_id,v1_0.memory,v1_0.name,v1_0.private_ip,v1_0.storage,v1_0.update_at,v1_0.vcpu,v1_0.vm_status from vm v1_0 where v1_0.vm_id=? and (v1_0.deleted = false)
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
